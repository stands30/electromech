<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Testimonial extends CI_Controller{        function __construct()    {        // Call the Model constructor        parent::__construct();        check_logged();        // echo $this->nextasy_url_encrypt->encrypt_openssl(21);        // exit;        $this->load->model('testimonials_model');    }        public function testimonial_list()    {        $data['title']             = 'Testimonial List';        // ***** Breadcrumb Data Starts here *******//        $data['breadcrumb_data'][] = array(            'Home',            base_url('dashboard')        );        $data['breadcrumb_data'][] = array(            'List'        );        $data['breadcrumb']        = $this->nextasy_library->ci_breadcrumbs($data['breadcrumb_data']);        // ***** Breadcrumb Data Ends here *******//        $data['dataTableData']     = $this->testimonials_model->getTestimonialForList(TABLE_COUNT);        // $data['dataTableData1']     = $this->home_model->getContactForList(TABLE_COUNT,TESTIMONIAL_LIST);        $data['global_asset_version']      = global_asset_version();        // print_r($data);        // exit;        $this->load->view('testimonial/testimonial-list', $data);    }        public function testimonial_add()    {        $data['title']             = 'Testimonial Add';        // ***** Breadcrumb Data Starts here *******//        $data['breadcrumb_data'][] = array(            'Home',            base_url('dashboard')        );        $data['breadcrumb_data'][] = array(            'List',            base_url('testimonial-list')        );        $data['breadcrumb_data'][] = array(            'Add'        );        $data['breadcrumb']        = $this->nextasy_library->ci_breadcrumbs($data['breadcrumb_data']);        $data['tml_order']         = $this->testimonials_model->getGenPrmIncrnValue();        // ***** Breadcrumb Data Ends here *******//        $data['global_asset_version']      = global_asset_version();        // print_r($data);        // exit;        $this->load->view('testimonial/testimonial-add', $data);    }        public function testimonial_edit($tml_id = '')    {        $data['title']             = 'Testimonial Edit';        // ***** Breadcrumb Data Starts here *******//        $data['breadcrumb_data'][] = array(            'Home',            base_url('dashboard')        );        $data['breadcrumb_data'][] = array(            'List',            base_url('testimonial-list')        );        $data['breadcrumb_data'][] = array(            'Edit'        );        $data['breadcrumb']        = $this->nextasy_library->ci_breadcrumbs($data['breadcrumb_data']);        // ***** Breadcrumb Data Ends here *******//        $data['global_asset_version']      = global_asset_version();        $data['ci_asset_versn']    = ci_asset_versn();        $tml_id                    = $this->nextasy_url_encrypt->decrypt_openssl($tml_id);        $data['testimonialEdit']   = $this->testimonials_model->getTestimonialForEdit($tml_id);        // print_r($data);        // exit;        $this->load->view('testimonial/testimonial-edit', $data);    }        public function getCustomerDropdown()    {        $search  = $this->input->get('q');        $CusData = array(            'results' => $this->testimonials_model->getCustomerDropdown($search)        );        echo json_encode($CusData);    }        public function testimonial_insert()    {        $data['img_name'] = '';                if (isset($_FILES['tml_image']['name'])) //profile image upload            {            // $sourcePath = $_FILES['tml_image']['tmp_name']; // Storing source path of the file in a variable            // $data['img_name']       = $_FILES['tml_image']['name'];            // $targetPath = TESTIMONIALS_IMAGE_PATH.$data['img_name']; // Target path where file is to be stored            // $check = move_uploaded_file($sourcePath,$targetPath) ; // Moving Uploaded file            $data['img_name'] = doc_upload(TESTIMONIALS_IMAGE_PATH, TESTIMONIALS_IMAGE_PATH_RESIZE, 'tml_image');            if (!isset($data['img_name'])) {                $response = array(                    'success' => false,                    'message' => '1'                );                echo json_encode($response);                exit();            }        }        //$data['user_id'] = $this->session->userdata('mha_prs_id');        $testimonialData = array(            'tml_cus_name' => $this->input->post('tml_cus_name'),            'tml_desc' => $this->input->post('tml_desc'),            'tml_order' => $this->input->post('tml_order'),            'tml_enable_status' => ENABLE_STATUS,            'tml_status' => ACTIVE_STATUS,            'tml_crdt_dt' => date("Y-m-d"),            'tml_image' => $data['img_name']        );        $inserted_id     = $this->home_model->insert('testimonial', $testimonialData);        if ($inserted_id) {            $response = array(                'success' => True,                'message' => 'Testimonial Added successfully',                'linkn' => base_url('testimonial-list')            );            echo json_encode($response);            exit();        }            }        public function testimonial_update()    {        $tml_id = $this->input->post('tml_id');        // echo '<pre>';        // print_r($_FILES);        // exit;        if (isset($_FILES['tml_image']['name'])) {            $deleteOldImage = TESTIMONIALS_IMAGE_PATH . $this->input->post('old_img');            if ($this->input->post('old_img') != '') {                if (file_exists($deleteOldImage)) {                    $data['imgname'] = unlink($deleteOldImage);                }            } else {                $data['imgname'] = '';            }            // $sourcePath      = $_FILES['tml_image']['tmp_name']; // Storing source path of the file in a variable            // $data['imgname'] = $_FILES['tml_image']["name"];            // $targetPath      = TESTIMONIALS_IMAGE_PATH . $data['imgname']; // Target path where file is to be stored            // move_uploaded_file($sourcePath, $targetPath); // Moving Uploaded file             $data['imgname'] = doc_upload(TESTIMONIALS_IMAGE_PATH, TESTIMONIALS_IMAGE_PATH_RESIZE, 'tml_image');        } else {            $data['imgname'] = $this->input->post('old_img');        }        $testimonialData = array(            'tml_cus_name' => $this->input->post('tml_cus_name'),            'tml_desc' => $this->input->post('tml_desc'),            'tml_order' => $this->input->post('tml_order'),            'tml_status' => ACTIVE_STATUS,            'tml_image' => $data['imgname']        );        $updated         = $this->home_model->update('tml_id', $tml_id, $testimonialData, 'testimonial');        // echo $updated;        // exit;        if ($updated) {            $response = array(                'success' => True,                'message' => 'Testimonial Updated successfully',                'linkn' => base_url('testimonial-list')            );            echo json_encode($response);            exit();        } else {            $response = array(                'success' => false,                'message' => 'Something went wrong'            );            echo json_encode($response);            exit();        }    }        public function getTestimonialtDataTableList()    {        $dataOptn               = $this->input->get();        $dataTableData          = $this->testimonials_model->getTestimonialForList(TABLE_RESULT, $dataOptn);        // ******** Encrypt Data from multidimensional array ******//        $enc_arr['tml_id']      = 'tml_encrypt_id';        $dataTableArray['data'] = encrypt_key_in_array($dataTableData, $enc_arr);        // ******** Encrypt Data from multidimensional array ******//        if (isset($dataOptn['columns'])) {            // *********** Get Data Count **********//            $dataTableArray['draw']            = $dataOptn['draw'];            $dataTableArray['recordsTotal']    = $dataOptn['table_data_count'];            $dataTableArray['recordsFiltered'] = $dataOptn['table_data_count'];            // *********** Get Data Count **********//        }        echo json_encode($dataTableArray);    }    // public function getTestimonialAddtDataTableList()    // {    //     $dataOptn               = $this->input->get();    //     $dataTableArray['data']          = $this->home_model->getContactForList(TABLE_RESULT,TESTIMONIAL_LIST,$dataOptn);    //     // ******** Encrypt Data from multidimensional array ******//    //         // $enc_arr['cnt_id']      = 'cnt_encrypt_id';    //         // $dataTableArray = encrypt_key_in_array($dataTableData, $enc_arr);    //     // ******** Encrypt Data from multidimensional array ******//    //     if (isset($dataOptn['columns'])) {    //         // *********** Get Data Count **********//    //         $dataTableArray['draw']            = $dataOptn['draw'];    //         $dataTableArray['recordsTotal']    = $dataOptn['table_data_count'];    //         $dataTableArray['recordsFiltered'] = $dataOptn['table_data_count'];    //         // *********** Get Data Count **********//    //     }    //     echo json_encode($dataTableArray);    // }            public function deleteTestimonial()    {        $tml_id    = $this->input->post('tml_id');        $img_name  = $this->home_model->getImageName($tml_id, 'testimonial');        $del_image = TESTIMONIALS_IMAGE_PATH . $img_name->image_name;        $del_image = UnlinkFile($del_image);        $check     = $this->testimonials_model->deleteTestimonial($tml_id);        if ($check) {            $response = array(                'success' => True,                'message' => 'Testimonial Removed successfully',                'linkn' => base_url('testimonial-list')            );            echo json_encode($response);        }    }    public function deleteAddTestimonial()    {        $cnt_id    = $this->input->post('cnt_id');                $check     = $this->home_model->deleteContact($cnt_id,TESTIMONIAL_LIST);        if ($check) {            $response = array(                'success' => True,                'message' => 'Submmitedd Testimonial Removed successfully',                'linkn' => base_url('testimonial-list')            );            echo json_encode($response);        }    }        public function changeTestimonialStatus()    {        $pra_value = $this->testimonials_model->changeTestimonialStatus();        if ($pra_value == 1) {            echo json_encode(array(                "success" => true,                "message" => "Selected Testimonial status have been updated successfully."            ));        } else {            echo json_encode(array(                "success" => false,                "message" => "Some error Occurs."            ));        }    }    }?>